package com.nology.resourcingapi.controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.nology.resourcingapi.entity.Temp;
import com.nology.resourcingapi.exception.ResourceNotFoundException;
import com.nology.resourcingapi.repository.TempRepository;

@CrossOrigin(origins = "http://localhost:8080")
@RestController
@RequestMapping("/temps")
public class TempController {
	
	@Autowired
	TempRepository tempRepository;
	
	@GetMapping
	public ResponseEntity<List<Temp>> getAllTemps(@RequestParam(required = false) String firstName) {
		List<Temp> temps = new ArrayList<Temp>();
		
		if (firstName == null) 
			tempRepository.findAll().forEach(temps::add);
		else 
			tempRepository.findByFirstNameContaining(firstName).forEach(temps::add);
		
		if (temps.isEmpty()) {
			return new ResponseEntity<>(HttpStatus.NO_CONTENT);
		}
		
		return new ResponseEntity<>(temps, HttpStatus.OK);
	}
	
	@GetMapping("/{id}")
	public ResponseEntity<Temp> getTempById(@PathVariable("id") long id) {
		Temp temp = tempRepository.findById(id)
				.orElseThrow(() -> new ResourceNotFoundException("Not found Temp with id = " + id));
		return new ResponseEntity<>(temp, HttpStatus.OK);
		
	}
}
